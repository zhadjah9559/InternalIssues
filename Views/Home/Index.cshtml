@using InternalIssues.Services
@using Microsoft.AspNetCore.Identity
@inject ITicketService ticketService
@inject UserManager<AppUser> userManager
@using InternalIssues.Data
@model InternalIssues.Models.ViewModels.DashboardViewModel

@{
    ViewData["Title"] = "Home Page";
}

@*Tickets Cards*@
<div class="row pb-4">

    <div class="col text-center">
        <div class="card card-statistics bg-blue-gradient">
            <div class="card-body">
                <h3>Total</h3>
                <p id="dashboard-cards-white-text"> <i class="fa fa-ticket"></i> @await ticketService.GetNumberOfAllTickets()</p>
            </div>
        </div>
    </div>

    <div class="col text-center">
        <div class="card card-statistics bg-green-gradient">
            <div class="card-body">
                <h3>Assigned</h3>
                <p id="dashboard-cards-white-text"> <i class="fa fa-ticket"></i> @await ticketService.GetNumberOfAllAssignedTickets()</p>
            </div>
        </div>
    </div>

    <div class="col text-center">
        <div class="card card-statistics bg-orange-gradient">
            <div class="card-body">
                <h3>Unassigned</h3>
                <p id="dashboard-cards-white-text"> <i class="fa fa-ticket"></i> @await ticketService.GetNumberOfAllAssignedTickets()</p>
            </div>
        </div>
    </div>

    <div class="col text-center">
        <div class="card card-statistics" style="background-color: #FFF200;">
            <div class="card-body">
                <h3>Open</h3>
                <p id="dashboard-cards-black-text"> <i class="fa fa-ticket"></i> @await ticketService.GetNumberOfAllOpenTickets()</p>
            </div>
        </div>
    </div>

    <div class="col text-center">
        <div class="card card-statistics" style="background-color: #FF0017;">
            <div class="card-body">
                <h3>Closed</h3>
                <p id="dashboard-cards-black-text"> <i class="fa fa-ticket"></i> @await ticketService.GetNumberOfAllClosedTickets()</p>
            </div>
        </div>
    </div>

</div>

@*Pie chart and Tickets by Category*@
<div class="row">
    <div class="col-lg-4 grid-margin stretch-card">
        <div class="card">
            <div class="p-4 pr-5 border-bottom bg-light d-flex justify-content-between">
                <h4 class="card-title mb-0" style="color:black">Ticket Priority Overview</h4>
                <id id="pie-chart-legend" class="mr-4"></id>
            </div>
            <div class="card-body d-flex">

                @*insert chat*@
                <canvas id="priorityChart" width="400" height="400"></canvas>

            </div>
        </div>
    </div>

    <div class="col-lg-4 grid-margin stretch-card">
        <div class="card">
            <div class="p-4 border-bottom bg-light">
                <h4 class="card-title mb-0" style="color:black">Tickets By Type</h4>
            </div>
            <div class="card-body">

                @*insert chart*@
                <canvas id="typeChart" width="400" height="400"></canvas>

            </div>
        </div>
    </div>

    <div class="col-lg-4 grid-margin stretch-card">
        <div class="card">
            <div class="p-4 border-bottom bg-light">
                <h4 class="card-title mb-0" style="color:black">Tickets By Status</h4>
            </div>
            <div class="card-body">

                @*insert chart*@
                <canvas id="statusChart" width="400" height="400"></canvas>

            </div>
        </div>
    </div>


</div>

@*Users on Project*@
<div class="row">
    <div class="col-lg-12 stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title" style="color:black;">Users on Project</h4>
                <table class="table table-bordered" id="users_on_project_table">
                    <thead>
                        <tr>
                            <th> Project Name</th>
                            <th> FullName </th>
                            <th> Role </th>
                            <th> Email </th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Projects)
                        {
                            <tr class="table-info">
                                <td> @item.Name </td>

                                <td>
                                    @foreach (var user in item.Members)
                                    {
                                        @user.FullName
                                        <br />
                                    }
                                </td>

                                <td>
                                    @foreach (var user in item.Members)
                                    {
                                        @foreach (var role in (await userManager.GetRolesAsync(user)))
                                        {
                                            @role
                                            <br />
                                        }
                                    }
                                </td>

                                <td>
                                    @foreach (var user in item.Members)
                                    {
                                        @user.Email
                                        <br />
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
   
</div>

<div class="row">
    <div class="card ml-2 mt-4">
        <div class="card-body">
            <h4 class="card-title" style="color:black;">Tickets in project</h4>
            <table class="table table-bordered" id="tickets_in_projects">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Tickets</th>
                        <th>Members on Project</th>
                        <th>Company</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var ticket in Model.Projects)
                    {
                        <tr>
                            <td> @ticket.Name </td>
                            <td> @ticket.Tickets.Count </td>
                            <td>@ticket.Members.Count</td>
                            <td> @ticket.Company.Name </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


@*Charts*@
@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"></script>
    <script>
        //Step 1 generate the URL that we will call to get JSON,
        //These are endpoints we want to hit
        var URL1 = '@Url.Action("PriorityChart", "Charts")';    //1st chart
        var URL2 = '@Url.Action("TypeChart", "Charts")';        //2nd chart
        var URL3 = '@Url.Action("StatusChart", "Charts")';      //3rd chart

        //Step2 - start the structure for our AJAX Calls
        $.post(URL1).then(function (response) {

            //Get the context/canvas for the chart
            var ctx = document.getElementById('priorityChart').getContext('2d');
            //Use the JSON response to create the data property of the chart
            var polarChartData = {
                labels: response.labels,
                datasets: [{
                    label: 'Tickets By Priority',
                    data: response.data,
                    backgroundColor: response.backgroundColors,
                    hoverOffset: 4
                }]
            };
            var polarChart = new Chart(ctx, {
                type: 'pie',
                data: polarChartData
            })
        });

        $.post(URL2).then(function (response) {

            //Get the context/canvas for the chart
            var ctx = document.getElementById('typeChart').getContext('2d');
            //Use the JSON response to create the data property of the chart
            var polarChartData = {
                labels: response.labels,
                datasets: [{
                    label: 'Tickets By Type',
                    data: response.data,
                    backgroundColor: response.backgroundColors,
                    hoverOffset: 4
                }]
            };
            var polarChart = new Chart(ctx, {
                type: 'pie',
                data: polarChartData
            })
        });

        $.post(URL3).then(function (response) {

            //Get the context/canvas for the chart
            var ctx = document.getElementById('statusChart').getContext('2d');
            //Use the JSON response to create the data property of the chart
            var polarChartData = {
                labels: response.labels,
                datasets: [{
                    label: 'Tickets By Status',
                    data: response.data,
                    backgroundColor: response.backgroundColors,
                    hoverOffset: 4
                }]
            };
            var polarChart = new Chart(ctx, {
                type: 'pie',
                data: polarChartData
            })
        });

        
    </script>
    <script src="//cdn.datatables.net/1.10.23/js/jquery.dataTables.min.js"></script>





}

