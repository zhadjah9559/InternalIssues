@using Microsoft.AspNetCore.Identity
@using InternalIssues.Services
@inject UserManager<AppUser> userManager
@inject IRoleService roleService

@{
    var users = new MultiSelectList(userManager.Users, "Id", "FullName");
    var roles = new SelectList(roleService.NonDemoRoles(), "Name", "Name");
}


@*This form will allow the admin to change the roles of user.
    It features a multiple drop down list. First the HttpGet will
    be called inside of the controller. After the view is display,
    the admin will chose which roles they want to change. The form
    info with who the admin has chosen will be sent to home
    controller, and the HttpPost ManageRoles() action*@

<div class=" offset-1 col-md-6 mb-3">

    <div class="card-header bg-linkedin">
        <h4>Role Management</h4>
    </div>

    <div class="card">



        <div class="card-body ">
            <form asp-action="ManageRoles" method="post">
                <div class="row">
                    <div class="col">
                        <select name="userIds" multiple="multiple" asp-items="@users"></select>
                    </div>
                    <div class="col">
                        <select name="roleName" asp-items="@roles"></select>
                    </div>
                </div>

                <div class="row">
                    <div class="col-4" offset-4>

                        <button type="submit" class="btn btn-primary btn-lg">Submit</button>

                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
    

<div class="offset-1 col-md-6">
    
    <div class="card-header bg-linkedin">
        <h4>User Roles</h4>
    </div>


    <div class="card-body" style="background-color: white">
        <table class="table table-bordered" id="manage_roles_tables">
            <thead>
                <tr>
                    <th>FirstName</th>
                    <th>LastName</th>
                    <th>Role</th>
                </tr>
            </thead>
            <tbody>

                @foreach (var user in userManager.Users.ToList())
                {
                    <tr>
                        <td>@user.FirstName</td>
                        <td>@user.LastName</td>
                        <td>
                            @foreach (var role in (await roleService.ListUserRolesAsync(user)))
                            {
                                <p>@role</p>
                            }
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>

</div>





    @section Scripts {
        <script src="//cdn.datatables.net/1.10.23/js/jquery.dataTables.min.js"></script>

    }
